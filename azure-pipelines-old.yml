# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- feature-fmg

pool:
  vmImage: 'ubuntu-18.04' # examples of other options: 'macOS-10.15', 'windows-2019'

variables:
  buildConfiguration: 'Debug'
  projectPath: ""
  kubernetesDeploymentYamlPath: kube/customer


steps:
# # do this before all your .NET Core tasks
# - task: DotNetCoreInstaller@0
#   inputs:
#     version: '2.2.105' # replace this value with the version that you need for your project

- task: UseDotNet@2
  inputs:
    version: '3.1.x'

#- script: dotnet restore
#  workingDirectory: $(projectPath)
  
#- script: dotnet build --configuration $(buildConfiguration)
#  displayName: 'dotnet build $(buildConfiguration)'
#  workingDirectory: $(projectPath)

# publish the binaries for release (in container)
- script: ./pub.sh $(buildConfiguration)
  displayName: Prepare for publishing $(buildConfiguration)
  workingDirectory: $(projectPath)

# Build the docker image
- task: Docker@2
  inputs:
    containerRegistry: 'DockerHub (mhildema)'
    repository: 'mhildema/customer-dotnet'
    command: 'buildAndPush'
    Dockerfile: '$(projectPath)/Dockerfile'
    buildContext: '$(projectPath)'
    tags: 'v$(Build.BuildId)'

# Copy Deployment YAML files
- task: CopyFiles@2
  inputs:
    sourceFolder: '$(kubernetesDeploymentYamlPath)'
    contents: '**/Deployment*.yml'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: drop