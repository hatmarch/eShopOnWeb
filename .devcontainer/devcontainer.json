// For format details, see https://aka.ms/vscode-remote/devcontainer.json or this file's README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.112.0/containers/dotnetcore-3.1
{
	"name": "eShopOnWeb",
    "build": {
        "dockerfile": "Dockerfile",
        "args": {
        "USERNAME": "default",
        "INSTALL_NODE": "false",
        "NODE_VERSION": "lts/*",
        "INSTALL_AZURE_CLI": "false"
        }
    },

		// Comment out to connect as root user. See https://aka.ms/vscode-remote/containers/non-root.
	// make sure this is the same as USERNAME above
	"remoteUser": "default",

	"runArgs": [
		"-v", "${env:HOME}/.aws:/opt/app-root/.aws",
		"-v", "${env:HOME}/.azure:/opt/app-root/.azure",
		"-v", "${env:HOME}/.kube:/opt/app-root/.kube",
		"-v", "${env:HOME}/.vs-kubernetes:/opt/app-root/.vs-kubernetes",
		// "-v",  "/etc/localtime:/etc/localtime:ro",
		// use local .oh-my-zsh configuration if it exists (overwriting one in container).
		// comment the following line out if you want to use local installation on container instead
		"-v", "${env:HOME}/.oh-my-zsh:/opt/app-root/.oh-my-zsh",
		"-v", "${env:HOME}/.helm:/opt/app-root/.helm",
		"-v", "${env:HOME}/.ssh:/opt/app-root/.ssh",
		"-e", "AWS_PROFILE=redhat",
		"-e", "REGION=ap-southeast-2",
		"-e", "AZ_RESOURCE_GROUP=${localEnv:AZ_RESOURCE_GROUP}"
		//"AWS_PROFILE=${env:AWS_PROFILE}"
	],
	"extensions": [
		"humao.rest-client",
		"redhat.vscode-camelk",
		"ms-dotnettools.csharp",
		"asciidoctor.asciidoctor-vscode",
		"formulahendry.dotnet-test-explorer",
        "ms-vscode.vscode-node-azure-pack",
        "ms-kubernetes-tools.vscode-kubernetes-tools",
        "redhat.vscode-yaml"
	],
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [5000, 5001],
	// [Optional] To reuse of your local HTTPS dev cert, first export it locally using this command:
	//  * Windows PowerShell:
	//     dotnet dev-certs https --trust; dotnet dev-certs https -ep "$env:USERPROFILE/.aspnet/https/aspnetapp.pfx" -p "SecurePwdGoesHere"
	//  * macOS/Linux terminal:
	//     dotnet dev-certs https --trust; dotnet dev-certs https -ep "${HOME}/.aspnet/https/aspnetapp.pfx" -p "SecurePwdGoesHere"
	//
	// Next, after running the command above, uncomment lines in the 'mounts' and 'remoteEnv' lines below,
	// and open / rebuild the container so the settings take effect.
	//
	"mounts": [
		// "source=${env:HOME}${env:USERPROFILE}/.aspnet/https,target=/home/vscode/.aspnet/https,type=bind"
	],
	"remoteEnv": {
		// "ASPNETCORE_Kestrel__Certificates__Default__Password": "SecurePwdGoesHere",
		// "ASPNETCORE_Kestrel__Certificates__Default__Path": "/home/vscode/.aspnet/https/aspnetapp.pfx",
	},

	"settings":{
		"terminal.integrated.shell.linux": "/bin/zsh",
		"workbench.colorTheme": "Default Light+",
		"http.proxyStrictSSL": false,
		"workbench.tips.enabled": false,
		"vs-kubernetes": { 
			"vs-kubernetes.namespace": "", 
			"vs-kubernetes.kubectl-path": "/usr/local/bin/kubectl", 
			"vs-kubernetes.helm-path": "", 
			"vs-kubernetes.draft-path": "", 
			"vs-kubernetes.minikube-path": "", 
			"vs-kubernetes.kubectlVersioning": "user-provided", 
			"vs-kubernetes.outputFormat": "yaml", 
			"vs-kubernetes.kubeconfig": "/opt/app-root/.kube/config", 
			"vs-kubernetes.autoCleanupOnDebugTerminate": false, 
			"vs-kubernetes.nodejs-autodetect-remote-root": true, 
			"vs-kubernetes.nodejs-remote-root": "", 
			"vs-kubernetes.nodejs-debug-port": 9229, 
			"checkForMinikubeUpgrade": true, 
			"logsDisplay": "webview", 
			"imageBuildTool": "Docker",
			"vs-kubernetes.knownKubeconfigs": [],
			"vs-kubernetes.kubectl-path.linux": "/usr/local/bin/kubectl",
			"vs-kubernetes.helm-path.linux": "/opt/app-root/.vs-kubernetes/tools/helm/linux-amd64/helm",
			"vs-kubernetes.minikube-path.linux": "",
			"vs-kubernetes.draft-path.linux": ""
		} 
	}

	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "dotnet restore"

}
