# These can be defined via the CLI in the create-demo script
# if defined here they will override what we set in the CLI
# variables:
# - name: k8_manifest_service_connection_id
#   value: ddc46a55-5e29-40f8-9731-f0612aeb1abc
# - name: container_registry_service_connection_id
#   value: 1e8b919a-2b7c-4f3b-bd2d-43cadf512093
# - name: openshift_service_connection_id
#   value: 27f93aa4-72d3-421a-b97c-623b779e29ca

parameters:
- name: manifest
  displayName: K8 Manifest
  type: string
  default: ./deploy/eshopweb-manifest.yaml
- name: target-namespace
  displayName: Target Namespace
  type: string
  default: az-demo-stage

trigger:
  branches:
    include:
    - feature-fmg

resources:
  repositories:
  - repository: self
    type: git
    ref: feature-fmg

jobs:
- job: Job_1
  displayName: Build Dotnet Code and Image
  pool:
    vmImage: ubuntu-20.04
  steps:
  - checkout: self
  - task: UseDotNet@2
    displayName: "Install .NET Core sdk 3.1.x on Agent"
    enabled: true
    inputs:
      version: 3.1.x
  - task: DotNetCoreCLI@2
    displayName: "Build Dotnet Artefacts (dotnet build)"
    enabled: false
    inputs:
      projects: ./src/Web/Web.csproj
  - task: DockerInstaller@0
    displayName: "Install Docker 17.09.0-ce"
    enabled: true
  - task: Docker@2
    displayName: "Build Docker Image and Push to Registry"
    enabled: true
    inputs:
      containerRegistry: $(container_registry_service_connection_id)
      repository: mhildenb/eshopweb
      Dockerfile: ./src/Web/Dockerfile
      buildContext: .
  - task: oc-setup@2
    displayName: "Install OpenShift Client on Agent"
    enabled: True
    inputs:
      openshiftService: $(openshift_service_connection_id)
  - task: Bash@3
    displayName: "Use oc to seed database in namespace ${{ parameters.target-namespace }}"
    enabled: True
    inputs:
      filePath: deploy/oc-db-seed.sh
      arguments: ${{ parameters.target-namespace }}
  - task: KubernetesManifest@0
    displayName: "Deploy Manifest"
    inputs:
      kubernetesServiceConnection: $(k8_manifest_service_connection_id)
      namespace: ${{ parameters.target-namespace }}
      manifests: ${{ parameters.manifest }}
      containers: quay.io/mhildenb/eshopweb:$(Build.BuildId)
  - task: CopyFiles@2
    displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
    inputs:
      SourceFolder: deploy
      TargetFolder: $(build.artifactstagingdirectory)
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: drop'
